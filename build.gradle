import org.owasp.dependencycheck.reporting.ReportGenerator

/*
 * Copyright 2021 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java'
    id "org.owasp.dependencycheck" version "5.3.1"
}

def scriptsUrl = 'https://raw.githubusercontent.com/reportportal/gradle-scripts/' +
        (project.hasProperty("releaseMode") ? getProperty('scripts.version') : 'master')

project.ext.publishRepo = "https://maven.pkg.github.com/reportportal/commons-model"

apply from: scriptsUrl + '/release-commons.gradle'
apply from: scriptsUrl + '/signing.gradle'
apply from: scriptsUrl + '/build-quality.gradle'

repositories {
    mavenCentral { url "https://repo1.maven.org/maven2" }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

wrapper {
    gradleVersion = '6.0'
}

dependencies {
    implementation "org.springdoc:springdoc-openapi-data-rest:${sprindocAnnotationsVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "javax.validation:validation-api:${validationApiVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    implementation group: 'com.google.guava', name: 'guava', version: '28.2-jre'

    // add lombok support
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoJunitJupiter}"
    testImplementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"
    testImplementation "javax.el:javax.el-api:${elApiVersion}"
    testImplementation "org.glassfish:javax.el:${elApiVersion}"
}

dependencyCheck {
    formats = [ReportGenerator.Format.HTML, ReportGenerator.Format.XML]
}




